/*
 * generated by Xtext 2.27.0-SNAPSHOT
 */
grammar InternalComp;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package upb.du.dti.isc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package upb.du.dti.isc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import upb.du.dti.isc.services.CompGrammarAccess;

}
@parser::members {
	private CompGrammarAccess grammarAccess;

	public void setGrammarAccess(CompGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleInicio
entryRuleInicio
:
{ before(grammarAccess.getInicioRule()); }
	 ruleInicio
{ after(grammarAccess.getInicioRule()); } 
	 EOF 
;

// Rule Inicio
ruleInicio 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInicioAccess().getGroup()); }
		(rule__Inicio__Group__0)
		{ after(grammarAccess.getInicioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarGoblal
entryRuleVarGoblal
:
{ before(grammarAccess.getVarGoblalRule()); }
	 ruleVarGoblal
{ after(grammarAccess.getVarGoblalRule()); } 
	 EOF 
;

// Rule VarGoblal
ruleVarGoblal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarGoblalAccess().getGroup()); }
		(rule__VarGoblal__Group__0)
		{ after(grammarAccess.getVarGoblalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetodo
entryRuleMetodo
:
{ before(grammarAccess.getMetodoRule()); }
	 ruleMetodo
{ after(grammarAccess.getMetodoRule()); } 
	 EOF 
;

// Rule Metodo
ruleMetodo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetodoAccess().getGroup()); }
		(rule__Metodo__Group__0)
		{ after(grammarAccess.getMetodoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam
entryRuleParam
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamAccess().getAlternatives()); }
		(rule__Param__Alternatives)
		{ after(grammarAccess.getParamAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTipoDouble
entryRuleTipoDouble
:
{ before(grammarAccess.getTipoDoubleRule()); }
	 ruleTipoDouble
{ after(grammarAccess.getTipoDoubleRule()); } 
	 EOF 
;

// Rule TipoDouble
ruleTipoDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTipoDoubleAccess().getGroup()); }
		(rule__TipoDouble__Group__0)
		{ after(grammarAccess.getTipoDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTipoBoolean
entryRuleTipoBoolean
:
{ before(grammarAccess.getTipoBooleanRule()); }
	 ruleTipoBoolean
{ after(grammarAccess.getTipoBooleanRule()); } 
	 EOF 
;

// Rule TipoBoolean
ruleTipoBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTipoBooleanAccess().getGroup()); }
		(rule__TipoBoolean__Group__0)
		{ after(grammarAccess.getTipoBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTipoString
entryRuleTipoString
:
{ before(grammarAccess.getTipoStringRule()); }
	 ruleTipoString
{ after(grammarAccess.getTipoStringRule()); } 
	 EOF 
;

// Rule TipoString
ruleTipoString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTipoStringAccess().getGroup()); }
		(rule__TipoString__Group__0)
		{ after(grammarAccess.getTipoStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTipoInt
entryRuleTipoInt
:
{ before(grammarAccess.getTipoIntRule()); }
	 ruleTipoInt
{ after(grammarAccess.getTipoIntRule()); } 
	 EOF 
;

// Rule TipoInt
ruleTipoInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTipoIntAccess().getGroup()); }
		(rule__TipoInt__Group__0)
		{ after(grammarAccess.getTipoIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValor
entryRuleValor
:
{ before(grammarAccess.getValorRule()); }
	 ruleValor
{ after(grammarAccess.getValorRule()); } 
	 EOF 
;

// Rule Valor
ruleValor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValorAccess().getExpresionParserRuleCall()); }
		ruleExpresion
		{ after(grammarAccess.getValorAccess().getExpresionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEjecucion
entryRuleEjecucion
:
{ before(grammarAccess.getEjecucionRule()); }
	 ruleEjecucion
{ after(grammarAccess.getEjecucionRule()); } 
	 EOF 
;

// Rule Ejecucion
ruleEjecucion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEjecucionAccess().getInstAssignment()); }
		(rule__Ejecucion__InstAssignment)
		{ after(grammarAccess.getEjecucionAccess().getInstAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondIter
entryRuleCondIter
:
{ before(grammarAccess.getCondIterRule()); }
	 ruleCondIter
{ after(grammarAccess.getCondIterRule()); } 
	 EOF 
;

// Rule CondIter
ruleCondIter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondIterAccess().getAlternatives()); }
		(rule__CondIter__Alternatives)
		{ after(grammarAccess.getCondIterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruccion
entryRuleInstruccion
:
{ before(grammarAccess.getInstruccionRule()); }
	 ruleInstruccion
{ after(grammarAccess.getInstruccionRule()); } 
	 EOF 
;

// Rule Instruccion
ruleInstruccion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstruccionAccess().getAlternatives()); }
		(rule__Instruccion__Alternatives)
		{ after(grammarAccess.getInstruccionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAsignacion
entryRuleAsignacion
:
{ before(grammarAccess.getAsignacionRule()); }
	 ruleAsignacion
{ after(grammarAccess.getAsignacionRule()); } 
	 EOF 
;

// Rule Asignacion
ruleAsignacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAsignacionAccess().getGroup()); }
		(rule__Asignacion__Group__0)
		{ after(grammarAccess.getAsignacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLlamadoMetodo
entryRuleLlamadoMetodo
:
{ before(grammarAccess.getLlamadoMetodoRule()); }
	 ruleLlamadoMetodo
{ after(grammarAccess.getLlamadoMetodoRule()); } 
	 EOF 
;

// Rule LlamadoMetodo
ruleLlamadoMetodo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLlamadoMetodoAccess().getGroup()); }
		(rule__LlamadoMetodo__Group__0)
		{ after(grammarAccess.getLlamadoMetodoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrint
entryRulePrint
:
{ before(grammarAccess.getPrintRule()); }
	 rulePrint
{ after(grammarAccess.getPrintRule()); } 
	 EOF 
;

// Rule Print
rulePrint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrintAccess().getGroup()); }
		(rule__Print__Group__0)
		{ after(grammarAccess.getPrintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresion
entryRuleExpresion
:
{ before(grammarAccess.getExpresionRule()); }
	 ruleExpresion
{ after(grammarAccess.getExpresionRule()); } 
	 EOF 
;

// Rule Expresion
ruleExpresion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionAccess().getConcatenacionParserRuleCall()); }
		ruleConcatenacion
		{ after(grammarAccess.getExpresionAccess().getConcatenacionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcatenacion
entryRuleConcatenacion
:
{ before(grammarAccess.getConcatenacionRule()); }
	 ruleConcatenacion
{ after(grammarAccess.getConcatenacionRule()); } 
	 EOF 
;

// Rule Concatenacion
ruleConcatenacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcatenacionAccess().getGroup()); }
		(rule__Concatenacion__Group__0)
		{ after(grammarAccess.getConcatenacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparacion
entryRuleComparacion
:
{ before(grammarAccess.getComparacionRule()); }
	 ruleComparacion
{ after(grammarAccess.getComparacionRule()); } 
	 EOF 
;

// Rule Comparacion
ruleComparacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparacionAccess().getGroup()); }
		(rule__Comparacion__Group__0)
		{ after(grammarAccess.getComparacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIgualOrDiferente
entryRuleIgualOrDiferente
:
{ before(grammarAccess.getIgualOrDiferenteRule()); }
	 ruleIgualOrDiferente
{ after(grammarAccess.getIgualOrDiferenteRule()); } 
	 EOF 
;

// Rule IgualOrDiferente
ruleIgualOrDiferente 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIgualOrDiferenteAccess().getGroup()); }
		(rule__IgualOrDiferente__Group__0)
		{ after(grammarAccess.getIgualOrDiferenteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModulo
entryRuleModulo
:
{ before(grammarAccess.getModuloRule()); }
	 ruleModulo
{ after(grammarAccess.getModuloRule()); } 
	 EOF 
;

// Rule Modulo
ruleModulo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuloAccess().getGroup()); }
		(rule__Modulo__Group__0)
		{ after(grammarAccess.getModuloAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperacionAritmetica
entryRuleOperacionAritmetica
:
{ before(grammarAccess.getOperacionAritmeticaRule()); }
	 ruleOperacionAritmetica
{ after(grammarAccess.getOperacionAritmeticaRule()); } 
	 EOF 
;

// Rule OperacionAritmetica
ruleOperacionAritmetica 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperacionAritmeticaAccess().getGroup()); }
		(rule__OperacionAritmetica__Group__0)
		{ after(grammarAccess.getOperacionAritmeticaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpSimp
entryRuleExpSimp
:
{ before(grammarAccess.getExpSimpRule()); }
	 ruleExpSimp
{ after(grammarAccess.getExpSimpRule()); } 
	 EOF 
;

// Rule ExpSimp
ruleExpSimp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpSimpAccess().getAlternatives()); }
		(rule__ExpSimp__Alternatives)
		{ after(grammarAccess.getExpSimpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSoulGem
entryRuleSoulGem
:
{ before(grammarAccess.getSoulGemRule()); }
	 ruleSoulGem
{ after(grammarAccess.getSoulGemRule()); } 
	 EOF 
;

// Rule SoulGem
ruleSoulGem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoulGemAccess().getGroup()); }
		(rule__SoulGem__Group__0)
		{ after(grammarAccess.getSoulGemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMindGem
entryRuleMindGem
:
{ before(grammarAccess.getMindGemRule()); }
	 ruleMindGem
{ after(grammarAccess.getMindGemRule()); } 
	 EOF 
;

// Rule MindGem
ruleMindGem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMindGemAccess().getGroup()); }
		(rule__MindGem__Group__0)
		{ after(grammarAccess.getMindGemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeGem
entryRuleTimeGem
:
{ before(grammarAccess.getTimeGemRule()); }
	 ruleTimeGem
{ after(grammarAccess.getTimeGemRule()); } 
	 EOF 
;

// Rule TimeGem
ruleTimeGem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeGemAccess().getGroup()); }
		(rule__TimeGem__Group__0)
		{ after(grammarAccess.getTimeGemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getTipoIntParserRuleCall_0()); }
		ruleTipoInt
		{ after(grammarAccess.getParamAccess().getTipoIntParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getParamAccess().getTipoStringParserRuleCall_1()); }
		ruleTipoString
		{ after(grammarAccess.getParamAccess().getTipoStringParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getParamAccess().getTipoBooleanParserRuleCall_2()); }
		ruleTipoBoolean
		{ after(grammarAccess.getParamAccess().getTipoBooleanParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getParamAccess().getTipoDoubleParserRuleCall_3()); }
		ruleTipoDouble
		{ after(grammarAccess.getParamAccess().getTipoDoubleParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondIterAccess().getSoulGemParserRuleCall_0()); }
		ruleSoulGem
		{ after(grammarAccess.getCondIterAccess().getSoulGemParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCondIterAccess().getMindGemParserRuleCall_1()); }
		ruleMindGem
		{ after(grammarAccess.getCondIterAccess().getMindGemParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCondIterAccess().getTimeGemParserRuleCall_2()); }
		ruleTimeGem
		{ after(grammarAccess.getCondIterAccess().getTimeGemParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruccion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstruccionAccess().getLlamadoMetodoParserRuleCall_0()); }
		ruleLlamadoMetodo
		{ after(grammarAccess.getInstruccionAccess().getLlamadoMetodoParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getAsignacionParserRuleCall_1()); }
		ruleAsignacion
		{ after(grammarAccess.getInstruccionAccess().getAsignacionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getPrintParserRuleCall_2()); }
		rulePrint
		{ after(grammarAccess.getInstruccionAccess().getPrintParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getValorParserRuleCall_3()); }
		ruleValor
		{ after(grammarAccess.getInstruccionAccess().getValorParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparacionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_0()); }
		'<='
		{ after(grammarAccess.getComparacionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparacionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_1()); }
		'>='
		{ after(grammarAccess.getComparacionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparacionAccess().getOpLessThanSignKeyword_1_1_0_2()); }
		'<'
		{ after(grammarAccess.getComparacionAccess().getOpLessThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparacionAccess().getOpGreaterThanSignKeyword_1_1_0_3()); }
		'>'
		{ after(grammarAccess.getComparacionAccess().getOpGreaterThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIgualOrDiferenteAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getIgualOrDiferenteAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIgualOrDiferenteAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getIgualOrDiferenteAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionAritmeticaAccess().getOpPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getOperacionAritmeticaAccess().getOpPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperacionAritmeticaAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getOperacionAritmeticaAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperacionAritmeticaAccess().getOpAsteriskKeyword_1_1_0_2()); }
		'*'
		{ after(grammarAccess.getOperacionAritmeticaAccess().getOpAsteriskKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperacionAritmeticaAccess().getOpSolidusKeyword_1_1_0_3()); }
		'/'
		{ after(grammarAccess.getOperacionAritmeticaAccess().getOpSolidusKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSimpAccess().getGroup_0()); }
		(rule__ExpSimp__Group_0__0)
		{ after(grammarAccess.getExpSimpAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpSimpAccess().getGroup_1()); }
		(rule__ExpSimp__Group_1__0)
		{ after(grammarAccess.getExpSimpAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpSimpAccess().getGroup_2()); }
		(rule__ExpSimp__Group_2__0)
		{ after(grammarAccess.getExpSimpAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpSimpAccess().getGroup_3()); }
		(rule__ExpSimp__Group_3__0)
		{ after(grammarAccess.getExpSimpAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpSimpAccess().getGroup_4()); }
		(rule__ExpSimp__Group_4__0)
		{ after(grammarAccess.getExpSimpAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__ValorBAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSimpAccess().getValorBSHIELDKeyword_1_1_0_0()); }
		'SHIELD'
		{ after(grammarAccess.getExpSimpAccess().getValorBSHIELDKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpSimpAccess().getValorBHYDRAKeyword_1_1_0_1()); }
		'HYDRA'
		{ after(grammarAccess.getExpSimpAccess().getValorBHYDRAKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inicio__Group__0__Impl
	rule__Inicio__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInicioAccess().getNameAssignment_0()); }
	(rule__Inicio__NameAssignment_0)
	{ after(grammarAccess.getInicioAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inicio__Group__1__Impl
	rule__Inicio__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInicioAccess().getVengadoresKeyword_1()); }
	'Vengadores'
	{ after(grammarAccess.getInicioAccess().getVengadoresKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inicio__Group__2__Impl
	rule__Inicio__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInicioAccess().getVarGlobalesAssignment_2()); }
	(rule__Inicio__VarGlobalesAssignment_2)*
	{ after(grammarAccess.getInicioAccess().getVarGlobalesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inicio__Group__3__Impl
	rule__Inicio__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getInicioAccess().getMetodosAssignment_3()); }
		(rule__Inicio__MetodosAssignment_3)
		{ after(grammarAccess.getInicioAccess().getMetodosAssignment_3()); }
	)
	(
		{ before(grammarAccess.getInicioAccess().getMetodosAssignment_3()); }
		(rule__Inicio__MetodosAssignment_3)*
		{ after(grammarAccess.getInicioAccess().getMetodosAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inicio__Group__4__Impl
	rule__Inicio__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInicioAccess().getCondEIteracionesAssignment_4()); }
	(rule__Inicio__CondEIteracionesAssignment_4)*
	{ after(grammarAccess.getInicioAccess().getCondEIteracionesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inicio__Group__5__Impl
	rule__Inicio__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInicioAccess().getEjAssignment_5()); }
	(rule__Inicio__EjAssignment_5)
	{ after(grammarAccess.getInicioAccess().getEjAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inicio__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInicioAccess().getUnidosKeyword_6()); }
	'Unidos'
	{ after(grammarAccess.getInicioAccess().getUnidosKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarGoblal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarGoblal__Group__0__Impl
	rule__VarGoblal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarGoblalAccess().getYoSoyKeyword_0()); }
	'YoSoy'
	{ after(grammarAccess.getVarGoblalAccess().getYoSoyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarGoblal__Group__1__Impl
	rule__VarGoblal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarGoblalAccess().getNameAssignment_1()); }
	(rule__VarGoblal__NameAssignment_1)
	{ after(grammarAccess.getVarGoblalAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarGoblal__Group__2__Impl
	rule__VarGoblal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarGoblalAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVarGoblalAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarGoblal__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarGoblalAccess().getValorAssignment_3()); }
	(rule__VarGoblal__ValorAssignment_3)
	{ after(grammarAccess.getVarGoblalAccess().getValorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Metodo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__0__Impl
	rule__Metodo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getIniciarJarvisKeyword_0()); }
	'IniciarJarvis'
	{ after(grammarAccess.getMetodoAccess().getIniciarJarvisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__1__Impl
	rule__Metodo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getNameAssignment_1()); }
	(rule__Metodo__NameAssignment_1)
	{ after(grammarAccess.getMetodoAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__2__Impl
	rule__Metodo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMetodoAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__3__Impl
	rule__Metodo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getGroup_3()); }
	(rule__Metodo__Group_3__0)?
	{ after(grammarAccess.getMetodoAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__4__Impl
	rule__Metodo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMetodoAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__5__Impl
	rule__Metodo__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMetodoAccess().getInstruccionesAssignment_5()); }
		(rule__Metodo__InstruccionesAssignment_5)
		{ after(grammarAccess.getMetodoAccess().getInstruccionesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getMetodoAccess().getInstruccionesAssignment_5()); }
		(rule__Metodo__InstruccionesAssignment_5)*
		{ after(grammarAccess.getMetodoAccess().getInstruccionesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__6__Impl
	rule__Metodo__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getCondEIteracionesAssignment_6()); }
	(rule__Metodo__CondEIteracionesAssignment_6)*
	{ after(grammarAccess.getMetodoAccess().getCondEIteracionesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__7__Impl
	rule__Metodo__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getFuncionesLocalesAssignment_7()); }
	(rule__Metodo__FuncionesLocalesAssignment_7)*
	{ after(grammarAccess.getMetodoAccess().getFuncionesLocalesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getApagarJarvisKeyword_8()); }
	'ApagarJarvis'
	{ after(grammarAccess.getMetodoAccess().getApagarJarvisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Metodo__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group_3__0__Impl
	rule__Metodo__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getParamAssignment_3_0()); }
	(rule__Metodo__ParamAssignment_3_0)
	{ after(grammarAccess.getMetodoAccess().getParamAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getGroup_3_1()); }
	(rule__Metodo__Group_3_1__0)*
	{ after(grammarAccess.getMetodoAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Metodo__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group_3_1__0__Impl
	rule__Metodo__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getMetodoAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metodo__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetodoAccess().getParamAssignment_3_1_1()); }
	(rule__Metodo__ParamAssignment_3_1_1)
	{ after(grammarAccess.getMetodoAccess().getParamAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TipoDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TipoDouble__Group__0__Impl
	rule__TipoDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTipoDoubleAccess().getDoubleKeyword_0()); }
	'Double'
	{ after(grammarAccess.getTipoDoubleAccess().getDoubleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TipoDouble__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTipoDoubleAccess().getNameAssignment_1()); }
	(rule__TipoDouble__NameAssignment_1)
	{ after(grammarAccess.getTipoDoubleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TipoBoolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TipoBoolean__Group__0__Impl
	rule__TipoBoolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoBoolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTipoBooleanAccess().getBooleanKeyword_0()); }
	'Boolean'
	{ after(grammarAccess.getTipoBooleanAccess().getBooleanKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoBoolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TipoBoolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoBoolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTipoBooleanAccess().getNameAssignment_1()); }
	(rule__TipoBoolean__NameAssignment_1)
	{ after(grammarAccess.getTipoBooleanAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TipoString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TipoString__Group__0__Impl
	rule__TipoString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTipoStringAccess().getStringKeyword_0()); }
	'String'
	{ after(grammarAccess.getTipoStringAccess().getStringKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TipoString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTipoStringAccess().getNameAssignment_1()); }
	(rule__TipoString__NameAssignment_1)
	{ after(grammarAccess.getTipoStringAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TipoInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TipoInt__Group__0__Impl
	rule__TipoInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTipoIntAccess().getIntKeyword_0()); }
	'Int'
	{ after(grammarAccess.getTipoIntAccess().getIntKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TipoInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTipoIntAccess().getNameAssignment_1()); }
	(rule__TipoInt__NameAssignment_1)
	{ after(grammarAccess.getTipoIntAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Asignacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group__0__Impl
	rule__Asignacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getNameAssignment_0()); }
	(rule__Asignacion__NameAssignment_0)
	{ after(grammarAccess.getAsignacionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group__1__Impl
	rule__Asignacion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAsignacionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getValorAssignment_2()); }
	(rule__Asignacion__ValorAssignment_2)
	{ after(grammarAccess.getAsignacionAccess().getValorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoMetodo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__0__Impl
	rule__LlamadoMetodo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getJarvisCallToKeyword_0()); }
	'JarvisCallTo'
	{ after(grammarAccess.getLlamadoMetodoAccess().getJarvisCallToKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__1__Impl
	rule__LlamadoMetodo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getMetodoAssignment_1()); }
	(rule__LlamadoMetodo__MetodoAssignment_1)
	{ after(grammarAccess.getLlamadoMetodoAccess().getMetodoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__2__Impl
	rule__LlamadoMetodo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLlamadoMetodoAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__3__Impl
	rule__LlamadoMetodo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getGroup_3()); }
	(rule__LlamadoMetodo__Group_3__0)?
	{ after(grammarAccess.getLlamadoMetodoAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLlamadoMetodoAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoMetodo__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group_3__0__Impl
	rule__LlamadoMetodo__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getArgsAssignment_3_0()); }
	(rule__LlamadoMetodo__ArgsAssignment_3_0)
	{ after(grammarAccess.getLlamadoMetodoAccess().getArgsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getGroup_3_1()); }
	(rule__LlamadoMetodo__Group_3_1__0)*
	{ after(grammarAccess.getLlamadoMetodoAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoMetodo__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group_3_1__0__Impl
	rule__LlamadoMetodo__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getLlamadoMetodoAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getArgsAssignment_3_1_1()); }
	(rule__LlamadoMetodo__ArgsAssignment_3_1_1)
	{ after(grammarAccess.getLlamadoMetodoAccess().getArgsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Print__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__0__Impl
	rule__Print__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getPlasmarRealidadKeyword_0()); }
	'PlasmarRealidad'
	{ after(grammarAccess.getPrintAccess().getPlasmarRealidadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__1__Impl
	rule__Print__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPrintAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__2__Impl
	rule__Print__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getEAssignment_2()); }
	(rule__Print__EAssignment_2)
	{ after(grammarAccess.getPrintAccess().getEAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getPrintAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concatenacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concatenacion__Group__0__Impl
	rule__Concatenacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatenacionAccess().getOrParserRuleCall_0()); }
	ruleOr
	{ after(grammarAccess.getConcatenacionAccess().getOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concatenacion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatenacionAccess().getGroup_1()); }
	(rule__Concatenacion__Group_1__0)*
	{ after(grammarAccess.getConcatenacionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concatenacion__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concatenacion__Group_1__0__Impl
	rule__Concatenacion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatenacionAccess().getConcatenacionIzqAction_1_0()); }
	()
	{ after(grammarAccess.getConcatenacionAccess().getConcatenacionIzqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concatenacion__Group_1__1__Impl
	rule__Concatenacion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatenacionAccess().getOpAssignment_1_1()); }
	(rule__Concatenacion__OpAssignment_1_1)
	{ after(grammarAccess.getConcatenacionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concatenacion__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatenacionAccess().getDerAssignment_1_2()); }
	(rule__Concatenacion__DerAssignment_1_2)
	{ after(grammarAccess.getConcatenacionAccess().getDerAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrIzqAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrIzqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
	(rule__Or__OpAssignment_1_1)
	{ after(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getDerAssignment_1_2()); }
	(rule__Or__DerAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getDerAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getComparacionParserRuleCall_0()); }
	ruleComparacion
	{ after(grammarAccess.getAndAccess().getComparacionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndIzqAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndIzqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
	(rule__And__OpAssignment_1_1)
	{ after(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getDerAssignment_1_2()); }
	(rule__And__DerAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getDerAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparacion__Group__0__Impl
	rule__Comparacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparacionAccess().getIgualOrDiferenteParserRuleCall_0()); }
	ruleIgualOrDiferente
	{ after(grammarAccess.getComparacionAccess().getIgualOrDiferenteParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparacion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparacionAccess().getGroup_1()); }
	(rule__Comparacion__Group_1__0)*
	{ after(grammarAccess.getComparacionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparacion__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparacion__Group_1__0__Impl
	rule__Comparacion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparacionAccess().getCompIzqAction_1_0()); }
	()
	{ after(grammarAccess.getComparacionAccess().getCompIzqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparacion__Group_1__1__Impl
	rule__Comparacion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparacionAccess().getOpAssignment_1_1()); }
	(rule__Comparacion__OpAssignment_1_1)
	{ after(grammarAccess.getComparacionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparacion__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparacionAccess().getDerAssignment_1_2()); }
	(rule__Comparacion__DerAssignment_1_2)
	{ after(grammarAccess.getComparacionAccess().getDerAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IgualOrDiferente__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IgualOrDiferente__Group__0__Impl
	rule__IgualOrDiferente__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIgualOrDiferenteAccess().getModuloParserRuleCall_0()); }
	ruleModulo
	{ after(grammarAccess.getIgualOrDiferenteAccess().getModuloParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IgualOrDiferente__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIgualOrDiferenteAccess().getGroup_1()); }
	(rule__IgualOrDiferente__Group_1__0)*
	{ after(grammarAccess.getIgualOrDiferenteAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IgualOrDiferente__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IgualOrDiferente__Group_1__0__Impl
	rule__IgualOrDiferente__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIgualOrDiferenteAccess().getIgualOrDiferenteIzqAction_1_0()); }
	()
	{ after(grammarAccess.getIgualOrDiferenteAccess().getIgualOrDiferenteIzqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IgualOrDiferente__Group_1__1__Impl
	rule__IgualOrDiferente__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIgualOrDiferenteAccess().getOpAssignment_1_1()); }
	(rule__IgualOrDiferente__OpAssignment_1_1)
	{ after(grammarAccess.getIgualOrDiferenteAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IgualOrDiferente__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIgualOrDiferenteAccess().getDerAssignment_1_2()); }
	(rule__IgualOrDiferente__DerAssignment_1_2)
	{ after(grammarAccess.getIgualOrDiferenteAccess().getDerAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modulo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__0__Impl
	rule__Modulo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getOperacionAritmeticaParserRuleCall_0()); }
	ruleOperacionAritmetica
	{ after(grammarAccess.getModuloAccess().getOperacionAritmeticaParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getGroup_1()); }
	(rule__Modulo__Group_1__0)*
	{ after(grammarAccess.getModuloAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modulo__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group_1__0__Impl
	rule__Modulo__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getModuloIzqAction_1_0()); }
	()
	{ after(grammarAccess.getModuloAccess().getModuloIzqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group_1__1__Impl
	rule__Modulo__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getOpAssignment_1_1()); }
	(rule__Modulo__OpAssignment_1_1)
	{ after(grammarAccess.getModuloAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getDerAssignment_1_2()); }
	(rule__Modulo__DerAssignment_1_2)
	{ after(grammarAccess.getModuloAccess().getDerAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperacionAritmetica__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionAritmetica__Group__0__Impl
	rule__OperacionAritmetica__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAritmeticaAccess().getExpSimpParserRuleCall_0()); }
	ruleExpSimp
	{ after(grammarAccess.getOperacionAritmeticaAccess().getExpSimpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionAritmetica__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAritmeticaAccess().getGroup_1()); }
	(rule__OperacionAritmetica__Group_1__0)*
	{ after(grammarAccess.getOperacionAritmeticaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperacionAritmetica__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionAritmetica__Group_1__0__Impl
	rule__OperacionAritmetica__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAritmeticaAccess().getOperacionAritmeticaIzqAction_1_0()); }
	()
	{ after(grammarAccess.getOperacionAritmeticaAccess().getOperacionAritmeticaIzqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionAritmetica__Group_1__1__Impl
	rule__OperacionAritmetica__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAritmeticaAccess().getOpAssignment_1_1()); }
	(rule__OperacionAritmetica__OpAssignment_1_1)
	{ after(grammarAccess.getOperacionAritmeticaAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionAritmetica__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAritmeticaAccess().getDerAssignment_1_2()); }
	(rule__OperacionAritmetica__DerAssignment_1_2)
	{ after(grammarAccess.getOperacionAritmeticaAccess().getDerAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpSimp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_0__0__Impl
	rule__ExpSimp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getIntAction_0_0()); }
	()
	{ after(grammarAccess.getExpSimpAccess().getIntAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getValorIAssignment_0_1()); }
	(rule__ExpSimp__ValorIAssignment_0_1)
	{ after(grammarAccess.getExpSimpAccess().getValorIAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpSimp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_1__0__Impl
	rule__ExpSimp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getBoolAction_1_0()); }
	()
	{ after(grammarAccess.getExpSimpAccess().getBoolAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getValorBAssignment_1_1()); }
	(rule__ExpSimp__ValorBAssignment_1_1)
	{ after(grammarAccess.getExpSimpAccess().getValorBAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpSimp__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_2__0__Impl
	rule__ExpSimp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getDoubleAction_2_0()); }
	()
	{ after(grammarAccess.getExpSimpAccess().getDoubleAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_2__1__Impl
	rule__ExpSimp__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getValorDAssignment_2_1()); }
	(rule__ExpSimp__ValorDAssignment_2_1)
	{ after(grammarAccess.getExpSimpAccess().getValorDAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_2__2__Impl
	rule__ExpSimp__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getFullStopKeyword_2_2()); }
	'.'
	{ after(grammarAccess.getExpSimpAccess().getFullStopKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getINTTerminalRuleCall_2_3()); }
	RULE_INT
	{ after(grammarAccess.getExpSimpAccess().getINTTerminalRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpSimp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_3__0__Impl
	rule__ExpSimp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getStringAction_3_0()); }
	()
	{ after(grammarAccess.getExpSimpAccess().getStringAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getValorSAssignment_3_1()); }
	(rule__ExpSimp__ValorSAssignment_3_1)
	{ after(grammarAccess.getExpSimpAccess().getValorSAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpSimp__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_4__0__Impl
	rule__ExpSimp__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getVariableAction_4_0()); }
	()
	{ after(grammarAccess.getExpSimpAccess().getVariableAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpSimp__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpSimpAccess().getVarAssignment_4_1()); }
	(rule__ExpSimp__VarAssignment_4_1)
	{ after(grammarAccess.getExpSimpAccess().getVarAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoulGem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoulGem__Group__0__Impl
	rule__SoulGem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoulGemAccess().getSOULKeyword_0()); }
	'SOUL'
	{ after(grammarAccess.getSoulGemAccess().getSOULKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoulGem__Group__1__Impl
	rule__SoulGem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoulGemAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSoulGemAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoulGem__Group__2__Impl
	rule__SoulGem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoulGemAccess().getCondicionIfAssignment_2()); }
	(rule__SoulGem__CondicionIfAssignment_2)
	{ after(grammarAccess.getSoulGemAccess().getCondicionIfAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoulGem__Group__3__Impl
	rule__SoulGem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoulGemAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSoulGemAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoulGem__Group__4__Impl
	rule__SoulGem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSoulGemAccess().getInstrSOULAssignment_4()); }
		(rule__SoulGem__InstrSOULAssignment_4)
		{ after(grammarAccess.getSoulGemAccess().getInstrSOULAssignment_4()); }
	)
	(
		{ before(grammarAccess.getSoulGemAccess().getInstrSOULAssignment_4()); }
		(rule__SoulGem__InstrSOULAssignment_4)*
		{ after(grammarAccess.getSoulGemAccess().getInstrSOULAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoulGem__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoulGemAccess().getGEMKeyword_5()); }
	'GEM'
	{ after(grammarAccess.getSoulGemAccess().getGEMKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MindGem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindGem__Group__0__Impl
	rule__MindGem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindGemAccess().getMINDKeyword_0()); }
	'MIND'
	{ after(grammarAccess.getMindGemAccess().getMINDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindGem__Group__1__Impl
	rule__MindGem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindGemAccess().getCondicionWhileAssignment_1()); }
	(rule__MindGem__CondicionWhileAssignment_1)
	{ after(grammarAccess.getMindGemAccess().getCondicionWhileAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindGem__Group__2__Impl
	rule__MindGem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMindGemAccess().getInstrMINDAssignment_2()); }
		(rule__MindGem__InstrMINDAssignment_2)
		{ after(grammarAccess.getMindGemAccess().getInstrMINDAssignment_2()); }
	)
	(
		{ before(grammarAccess.getMindGemAccess().getInstrMINDAssignment_2()); }
		(rule__MindGem__InstrMINDAssignment_2)*
		{ after(grammarAccess.getMindGemAccess().getInstrMINDAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindGem__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindGemAccess().getGEMKeyword_3()); }
	'GEM'
	{ after(grammarAccess.getMindGemAccess().getGEMKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeGem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeGem__Group__0__Impl
	rule__TimeGem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeGemAccess().getTIMEKeyword_0()); }
	'TIME'
	{ after(grammarAccess.getTimeGemAccess().getTIMEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeGem__Group__1__Impl
	rule__TimeGem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeGemAccess().getCondicionForAssignment_1()); }
	(rule__TimeGem__CondicionForAssignment_1)
	{ after(grammarAccess.getTimeGemAccess().getCondicionForAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeGem__Group__2__Impl
	rule__TimeGem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeGemAccess().getTOKeyword_2()); }
	'TO'
	{ after(grammarAccess.getTimeGemAccess().getTOKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeGem__Group__3__Impl
	rule__TimeGem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeGemAccess().getFinalForAssignment_3()); }
	(rule__TimeGem__FinalForAssignment_3)
	{ after(grammarAccess.getTimeGemAccess().getFinalForAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeGem__Group__4__Impl
	rule__TimeGem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTimeGemAccess().getInstrTIMEAssignment_4()); }
		(rule__TimeGem__InstrTIMEAssignment_4)
		{ after(grammarAccess.getTimeGemAccess().getInstrTIMEAssignment_4()); }
	)
	(
		{ before(grammarAccess.getTimeGemAccess().getInstrTIMEAssignment_4()); }
		(rule__TimeGem__InstrTIMEAssignment_4)*
		{ after(grammarAccess.getTimeGemAccess().getInstrTIMEAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeGem__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeGemAccess().getGEMKeyword_5()); }
	'GEM'
	{ after(grammarAccess.getTimeGemAccess().getGEMKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inicio__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInicioAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInicioAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__VarGlobalesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInicioAccess().getVarGlobalesVarGoblalParserRuleCall_2_0()); }
		ruleVarGoblal
		{ after(grammarAccess.getInicioAccess().getVarGlobalesVarGoblalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__MetodosAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInicioAccess().getMetodosMetodoParserRuleCall_3_0()); }
		ruleMetodo
		{ after(grammarAccess.getInicioAccess().getMetodosMetodoParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__CondEIteracionesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInicioAccess().getCondEIteracionesCondIterParserRuleCall_4_0()); }
		ruleCondIter
		{ after(grammarAccess.getInicioAccess().getCondEIteracionesCondIterParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inicio__EjAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInicioAccess().getEjEjecucionParserRuleCall_5_0()); }
		ruleEjecucion
		{ after(grammarAccess.getInicioAccess().getEjEjecucionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarGoblalAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarGoblalAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarGoblal__ValorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarGoblalAccess().getValorExpSimpParserRuleCall_3_0()); }
		ruleExpSimp
		{ after(grammarAccess.getVarGoblalAccess().getValorExpSimpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetodoAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMetodoAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__ParamAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetodoAccess().getParamParamParserRuleCall_3_0_0()); }
		ruleParam
		{ after(grammarAccess.getMetodoAccess().getParamParamParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__ParamAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetodoAccess().getParamParamParserRuleCall_3_1_1_0()); }
		ruleParam
		{ after(grammarAccess.getMetodoAccess().getParamParamParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__InstruccionesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetodoAccess().getInstruccionesInstruccionParserRuleCall_5_0()); }
		ruleInstruccion
		{ after(grammarAccess.getMetodoAccess().getInstruccionesInstruccionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__CondEIteracionesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetodoAccess().getCondEIteracionesCondIterParserRuleCall_6_0()); }
		ruleCondIter
		{ after(grammarAccess.getMetodoAccess().getCondEIteracionesCondIterParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metodo__FuncionesLocalesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetodoAccess().getFuncionesLocalesMetodoParserRuleCall_7_0()); }
		ruleMetodo
		{ after(grammarAccess.getMetodoAccess().getFuncionesLocalesMetodoParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoDouble__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTipoDoubleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTipoDoubleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoBoolean__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTipoBooleanAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTipoBooleanAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoString__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTipoStringAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTipoStringAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoInt__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTipoIntAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTipoIntAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ejecucion__InstAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEjecucionAccess().getInstInstruccionParserRuleCall_0()); }
		ruleInstruccion
		{ after(grammarAccess.getEjecucionAccess().getInstInstruccionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsignacionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAsignacionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__ValorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsignacionAccess().getValorExpresionParserRuleCall_2_0()); }
		ruleExpresion
		{ after(grammarAccess.getAsignacionAccess().getValorExpresionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__MetodoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoMetodoAccess().getMetodoMetodoCrossReference_1_0()); }
		(
			{ before(grammarAccess.getLlamadoMetodoAccess().getMetodoMetodoIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLlamadoMetodoAccess().getMetodoMetodoIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getLlamadoMetodoAccess().getMetodoMetodoCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__ArgsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoMetodoAccess().getArgsExpresionParserRuleCall_3_0_0()); }
		ruleExpresion
		{ after(grammarAccess.getLlamadoMetodoAccess().getArgsExpresionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__ArgsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoMetodoAccess().getArgsExpresionParserRuleCall_3_1_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getLlamadoMetodoAccess().getArgsExpresionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__EAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintAccess().getEExpresionParserRuleCall_2_0()); }
		ruleExpresion
		{ after(grammarAccess.getPrintAccess().getEExpresionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatenacionAccess().getOpPlusSignPlusSignKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getConcatenacionAccess().getOpPlusSignPlusSignKeyword_1_1_0()); }
			'++'
			{ after(grammarAccess.getConcatenacionAccess().getOpPlusSignPlusSignKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getConcatenacionAccess().getOpPlusSignPlusSignKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenacion__DerAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatenacionAccess().getDerOrParserRuleCall_1_2_0()); }
		ruleOr
		{ after(grammarAccess.getConcatenacionAccess().getDerOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
			'||'
			{ after(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__DerAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getDerAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getDerAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
			'&&'
			{ after(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__DerAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getDerComparacionParserRuleCall_1_2_0()); }
		ruleComparacion
		{ after(grammarAccess.getAndAccess().getDerComparacionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparacionAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparacion__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparacionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparacion__DerAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparacionAccess().getDerIgualOrDiferenteParserRuleCall_1_2_0()); }
		ruleIgualOrDiferente
		{ after(grammarAccess.getComparacionAccess().getDerIgualOrDiferenteParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIgualOrDiferenteAccess().getOpAlternatives_1_1_0()); }
		(rule__IgualOrDiferente__OpAlternatives_1_1_0)
		{ after(grammarAccess.getIgualOrDiferenteAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IgualOrDiferente__DerAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIgualOrDiferenteAccess().getDerModuloParserRuleCall_1_2_0()); }
		ruleModulo
		{ after(grammarAccess.getIgualOrDiferenteAccess().getDerModuloParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuloAccess().getOpPercentSignKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getModuloAccess().getOpPercentSignKeyword_1_1_0()); }
			'%'
			{ after(grammarAccess.getModuloAccess().getOpPercentSignKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getModuloAccess().getOpPercentSignKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__DerAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuloAccess().getDerOperacionAritmeticaParserRuleCall_1_2_0()); }
		ruleOperacionAritmetica
		{ after(grammarAccess.getModuloAccess().getDerOperacionAritmeticaParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionAritmeticaAccess().getOpAlternatives_1_1_0()); }
		(rule__OperacionAritmetica__OpAlternatives_1_1_0)
		{ after(grammarAccess.getOperacionAritmeticaAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionAritmetica__DerAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionAritmeticaAccess().getDerExpSimpParserRuleCall_1_2_0()); }
		ruleExpSimp
		{ after(grammarAccess.getOperacionAritmeticaAccess().getDerExpSimpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__ValorIAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSimpAccess().getValorIINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getExpSimpAccess().getValorIINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__ValorBAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSimpAccess().getValorBAlternatives_1_1_0()); }
		(rule__ExpSimp__ValorBAlternatives_1_1_0)
		{ after(grammarAccess.getExpSimpAccess().getValorBAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__ValorDAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSimpAccess().getValorDINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getExpSimpAccess().getValorDINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__ValorSAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSimpAccess().getValorSSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getExpSimpAccess().getValorSSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpSimp__VarAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpSimpAccess().getVarAsignacionCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getExpSimpAccess().getVarAsignacionIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExpSimpAccess().getVarAsignacionIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getExpSimpAccess().getVarAsignacionCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__CondicionIfAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoulGemAccess().getCondicionIfExpresionParserRuleCall_2_0()); }
		ruleExpresion
		{ after(grammarAccess.getSoulGemAccess().getCondicionIfExpresionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoulGem__InstrSOULAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoulGemAccess().getInstrSOULInstruccionParserRuleCall_4_0()); }
		ruleInstruccion
		{ after(grammarAccess.getSoulGemAccess().getInstrSOULInstruccionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__CondicionWhileAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMindGemAccess().getCondicionWhileExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getMindGemAccess().getCondicionWhileExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindGem__InstrMINDAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMindGemAccess().getInstrMINDInstruccionParserRuleCall_2_0()); }
		ruleInstruccion
		{ after(grammarAccess.getMindGemAccess().getInstrMINDInstruccionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__CondicionForAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeGemAccess().getCondicionForAsignacionParserRuleCall_1_0()); }
		ruleAsignacion
		{ after(grammarAccess.getTimeGemAccess().getCondicionForAsignacionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__FinalForAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeGemAccess().getFinalForINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeGemAccess().getFinalForINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeGem__InstrTIMEAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeGemAccess().getInstrTIMEInstruccionParserRuleCall_4_0()); }
		ruleInstruccion
		{ after(grammarAccess.getTimeGemAccess().getInstrTIMEInstruccionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
